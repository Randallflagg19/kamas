{"version":3,"file":"static/js/779.d06f0d0d.chunk.js","mappings":"2IACA,SAAgB,QAAU,4BAA4B,aAAe,iCAAiC,OAAS,4B,uBCQhG,SAASA,EAAWC,GAClC,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOC,OAAS,IAAMD,EAAOE,OAAOC,UACnDL,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAIT,EAAKO,SAAER,EAAMW,QAG7B,CCfA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAA4I,0B,QCA5I,SAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,2BCO7H,SAASC,EAAQZ,GAC/B,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOQ,QAAQL,SAAER,EAAMa,SAC/C,C,sDCLA,MAAMC,GAAcC,EAAAA,EAAAA,IAAiB,IAmBrC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,2BAAhC,EAjBwBjB,IAEtBkB,EAAAA,EAAAA,MAAA,QAAMC,SAAUnB,EAAMoB,aAAaZ,SAAA,EAClCL,EAAAA,EAAAA,KAAA,OAAAK,UACCL,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,GAAUX,GACrBY,YAAa,qBACbf,KAAM,sBAEdR,EAAAA,EAAAA,KAAA,OAAAK,UACCL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,gB,kCCYZ,SAAemB,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAdAC,IACf,CACNC,YAAaD,EAAMC,gBAIKC,IAClB,CACNC,YAAcC,IACbF,GAASG,EAAAA,EAAAA,IAAmBD,GAAgB,MAKsBE,EAAAA,EAArE,ECrBe,SAAiBnC,GAW/B,IAAI6B,EAAQ7B,EAAM8B,YAEdM,EAAkBP,EAAMQ,QAAQC,KAAKhC,IACjCH,EAAAA,EAAAA,KAACJ,EAAU,CAAiBG,GAAII,EAAOJ,GAAIS,KAAML,EAAOK,MAAvCL,EAAOJ,MAG5BqC,EAAmBV,EAAMW,SAASF,KAAKzB,IACnCV,EAAAA,EAAAA,KAACS,EAAO,CAAkBV,GAAIW,EAAQX,GAAIW,QAASA,EAAQA,SAA7CA,EAAQX,MAM9B,OAAKF,EAAMyC,QACJvB,EAAAA,EAAAA,MAAA,OAAKd,UAAWC,EAAeG,SAAA,EACrCL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAoBG,SAAE4B,KACtCjC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBG,SAAE+B,KAClCpC,EAAAA,EAAAA,KAACuC,EAAc,CAACvB,SAPIwB,IACpB3C,EAAMgC,YAAYW,EAAOV,eAAe,QAEf9B,EAAAA,EAAAA,KAACyC,EAAAA,GAAQ,CAAClC,GAAI,UAMzC,G","sources":["webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.tsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMEssageForm.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"DialogItem_dialogs__pxrq6\",\"dialogsItems\":\"DialogItem_dialogsItems__ReLAZ\",\"active\":\"DialogItem_active__wvgh9\"};","import styles from './DialogItem.module.css'\nimport {NavLink} from 'react-router-dom'\n\ntype dialogItemProps = {\n\tkey: number,\n\tid: number,\n\tname: string\n}\n\nexport default function DialogItem(props: dialogItemProps) {\n\tlet path = '/dialogs/' + props.id\n\treturn (\n\t\t<div className={styles.dialog + ' ' + styles.active}>\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\n\t\t</div>\n\t)\n};\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Message_dialogs__qitON\",\"dialogsItems\":\"Message_dialogsItems__0JklN\",\"active\":\"Message_active__NUbix\",\"messages\":\"Message_messages__eByBY\"};","import React from 'react'\nimport styles from './Message.module.css'\n\ntype MessageProps = {\n\tid: number;\n\tmessage: string;\n};\n\nexport default function Message(props: MessageProps) {\n\treturn <div className={styles.message}>{props.message}</div>\n}\n","import {maxLengthCreator, required} from '../../../utils/validate/validators'\n// @ts-ignore\nimport {Field, reduxForm} from 'redux-form'\nimport {TextArea} from '../../common/FormsControls/FormsControls'\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm = (props: any) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<Field component={TextArea}\n\t\t\t\t       validate={[required, maxLength50]}\n\t\t\t\t       placeholder={'Enter your message'}\n\t\t\t\t       name={'newMessageBody'}/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button>Send</button>\n\t\t\t</div>\n\n\n\t\t</form>\n\t)\n}\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm)","import {\n\tsendMessageCreator\n} from '../../redux/dialogsReducer'\nimport Dialogs from './Dialogs'\nimport {connect} from 'react-redux'\n\nimport {compose} from 'redux'\nimport withAuthRedirect from '../../hoc/WithAuthRedirect'\n\ninterface IDialogsPage {\n\tmessages: { id: number, message: string }[];\n\tdialogs: { id: number, name: string }[];\n\tnewMessageBody: string;\n}\n\nlet mapStateToProps = (state: any) => {\n\treturn {\n\t\tdialogsPage: state.dialogsPage\n\t}\n}\n\nlet mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsendMessage: (newMessageBody: any) => {\n\t\t\tdispatch(sendMessageCreator(newMessageBody))\n\t\t}\n\t}\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\n","import DialogItem from './DialogItem/DialogItem'\nimport styles from './Dialogs.module.css'\nimport Message from './Message/Message'\nimport {Navigate} from 'react-router-dom'\n// @ts-ignore\nimport {Field, reduxForm} from 'redux-form'\nimport AddMessageForm from './AddMessageForm/AddMEssageForm'\n\nexport default function Dialogs(props: any) {\n\ttype Dialog = {\n\t\tkey: number,\n\t\tid: number;\n\t\tname: string;\n\t};\n\ttype Message = {\n\t\tkey: number,\n\t\tid: number;\n\t\tmessage: string;\n\t};\n\tlet state = props.dialogsPage\n\n\tlet dialogsElements = state.dialogs.map((dialog: Dialog) => {\n\t\treturn <DialogItem key={dialog.id} id={dialog.id} name={dialog.name}/>\n\t})\n\n\tlet messagesElements = state.messages.map((message: Message) => {\n\t\treturn <Message key={message.id} id={message.id} message={message.message}/>\n\t})\n\n\tlet addNewMessage = (values: any) => {\n\t\tprops.sendMessage(values.newMessageBody)\n\t}\n\tif (!props.isAuth) return <Navigate to={'/login'}/>\n\treturn <div className={styles.dialogs}>\n\t\t<div className={styles.dialogsItems}>{dialogsElements}</div>\n\t\t<div className={styles.messages}>{messagesElements}</div>\n\t\t<AddMessageForm onSubmit={addNewMessage}/>\n\t</div>\n}\n\n"],"names":["DialogItem","props","path","id","_jsx","className","styles","dialog","active","children","NavLink","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","compose","connect","state","dialogsPage","dispatch","sendMessage","newMessageBody","sendMessageCreator","withAuthRedirect","dialogsElements","dialogs","map","messagesElements","messages","isAuth","AddMessageForm","values","Navigate"],"sourceRoot":""}